{"version":3,"file":"game.js","mappings":"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","sources":["webpack://rocket-raiders/webpack/bootstrap","webpack://rocket-raiders/webpack/runtime/define property getters","webpack://rocket-raiders/webpack/runtime/hasOwnProperty shorthand","webpack://rocket-raiders/webpack/runtime/make namespace object","webpack://rocket-raiders/./logic/game/utils/constant.js","webpack://rocket-raiders/./logic/game/utils/function.js","webpack://rocket-raiders/./logic/game/particles/particles.js","webpack://rocket-raiders/./node_modules/engine.io-parser/build/esm/commons.js","webpack://rocket-raiders/./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack://rocket-raiders/./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack://rocket-raiders/./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack://rocket-raiders/./node_modules/engine.io-parser/build/esm/index.js","webpack://rocket-raiders/./node_modules/@socket.io/component-emitter/lib/esm/index.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/globals.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/util.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/transport.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/transports/polling.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/transports/index.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack://rocket-raiders/./node_modules/engine.io-client/build/esm/socket.js","webpack://rocket-raiders/./node_modules/socket.io-parser/build/esm/is-binary.js","webpack://rocket-raiders/./node_modules/socket.io-parser/build/esm/binary.js","webpack://rocket-raiders/./node_modules/socket.io-parser/build/esm/index.js","webpack://rocket-raiders/./node_modules/socket.io-client/build/esm/on.js","webpack://rocket-raiders/./node_modules/socket.io-client/build/esm/socket.js","webpack://rocket-raiders/./node_modules/socket.io-client/build/esm/contrib/backo2.js","webpack://rocket-raiders/./node_modules/socket.io-client/build/esm/manager.js","webpack://rocket-raiders/./node_modules/socket.io-client/build/esm/index.js","webpack://rocket-raiders/./node_modules/socket.io-client/build/esm/url.js","webpack://rocket-raiders/./logic/game/utils/spriteAnimation.js","webpack://rocket-raiders/./logic/game/player/playerImg.js","webpack://rocket-raiders/./logic/game/player/player.js","webpack://rocket-raiders/./logic/game/player/connectedPlayers.js","webpack://rocket-raiders/./logic/game/player/weapons/weapon.js","webpack://rocket-raiders/./logic/game/player/weapons/Gun.js","webpack://rocket-raiders/./logic/game/player/weapons/utils.js","webpack://rocket-raiders/./logic/game/websocket.js","webpack://rocket-raiders/./logic/game/player/currentPlayer.js","webpack://rocket-raiders/./logic/game/main.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { getRandomCharacters } from \"./function.js\";\r\n\r\nexport const maxDistance = 10000;\r\n\r\nexport const canvas = document.createElement('canvas');\r\ndocument.body.appendChild(canvas);\r\n\r\nexport const ctx = canvas.getContext('2d');\r\n\r\nexport const userName = getRandomCharacters()","import { ctx } from \"./constant.js\";\r\n\r\n\r\nexport function getRandomInt(min, max) {\r\n  const minCeiled = Math.ceil(min);\r\n  const maxFloored = Math.floor(max);\r\n  return Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled);\r\n}\r\n\r\nexport function getRandomNZeroInt(min, max) {\r\n  const minCeiled = Math.ceil(min);\r\n  const maxFloored = Math.floor(max);\r\n  let random = Math.floor(Math.random() * (maxFloored - minCeiled) + minCeiled)\r\n  if (random === 0) {\r\n    random = min;\r\n  }\r\n\r\n  return random;\r\n}\r\n\r\n\r\nexport function distanceBetween(obj, obj2) {\r\n  return [Math.sqrt((obj.x - obj2.x) ** 2 + (obj.y - obj2.y) ** 2), (obj.x - obj2.x), (obj.y - obj2.y)];\r\n}\r\n\r\nexport function angleBetween(obj, obj2) {\r\n  return Math.atan2((obj.y - obj2.y), (obj.x - obj2.x))\r\n}\r\n\r\nexport const randomColor = () => `hsl(${Math.random() * 360}, 50%, 50%)`;\r\n\r\nexport function radToDeg(rad) {\r\n  return rad * 180 / Math.PI;\r\n}\r\n\r\nexport function degToRad(deg) {\r\n  return deg * Math.PI / 180;\r\n}\r\n\r\nexport function getRandomCharacters() {\r\n  let char = '';\r\n  for (let i = 0; i < 10; i++) {\r\n    if (i === 0) {\r\n      char += String.fromCharCode(getRandomInt(65, 91))\r\n    } else {\r\n      char += String.fromCharCode(getRandomInt(97, 123))\r\n    }\r\n  }\r\n\r\n  return char;\r\n}\r\n\r\nexport function debug() {\r\n  const p = document.createElement('p');\r\n  document.body.appendChild(p)\r\n\r\n  return p;\r\n}\r\n\r\n\r\nexport function lerp(a, b, t) {\r\n  return a + (b - a) * t;\r\n}\r\n\r\n\r\nfunction projectPolygon(axis, vertices) {\r\n  const projections = vertices.map(v => (v.x * axis.x + v.y * axis.y));\r\n  return {\r\n    min: Math.min(...projections),\r\n    max: Math.max(...projections)\r\n  };\r\n}\r\n\r\nfunction isSeparatingAxis(axis, vertices1, vertices2) {\r\n  const proj1 = projectPolygon(axis, vertices1);\r\n  const proj2 = projectPolygon(axis, vertices2);\r\n\r\n  return proj1.max < proj2.min || proj2.max < proj1.min;\r\n}\r\n\r\nfunction getEdges(vertices) {\r\n  let edges = [];\r\n  for (let i = 0; i < vertices.length; i++) {\r\n    const next = (i + 1) % vertices.length;\r\n    edges.push({\r\n      x: vertices[next].x - vertices[i].x,\r\n      y: vertices[next].y - vertices[i].y\r\n    });\r\n  }\r\n  return edges;\r\n}\r\n\r\n\r\nexport function checkCollision(obj1, obj2) {\r\n  const vertices1 = obj1.getVertices();\r\n  const vertices2 = obj2.getVertices();\r\n\r\n  const edges = [\r\n    ...getEdges(vertices1),\r\n    ...getEdges(vertices2)\r\n  ];\r\n\r\n  for (let edge of edges) {\r\n    const axis = { x: -edge.y, y: edge.x };\r\n    if (isSeparatingAxis(axis, vertices1, vertices2)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\nexport function drawLive(player) {\r\n  player.ctx.save();\r\n  player.ctx.fillStroke = 'springGreen';\r\n  player.ctx.lineWidth = 4;\r\n  for (let i = 0; i < player.live; i++) {\r\n    player.ctx.beginPath();\r\n    player.ctx.moveTo((innerWidth - 10) - (i * 5), 10);\r\n    player.ctx.lineTo((innerWidth - 10) - (i * 5), 20);\r\n    player.ctx.stroke();\r\n  }\r\n  player.ctx.restore()\r\n}\r\n\r\nexport function damageAnimation(player) {\r\n  player.live--;\r\n  player.weaponHit = true;\r\n  const interVal = setInterval(() => {\r\n    player.damage = !player.damage;\r\n  }, 100);\r\n  setTimeout(() => {\r\n    player.weaponHit = false;\r\n    player.damage = false;\r\n    clearInterval(interVal);\r\n  }, 3000)\r\n}\r\n\r\n\r\nexport function drawSpriteFrame(spriteSheet, frameX, frameY, canvasX, canvasY, width, height, scaleWidth, scaleHeight) {\r\n  ctx.drawImage(spriteSheet, frameX * width, frameY * height, width, height, canvasX, canvasY, scaleWidth, scaleHeight)\r\n}\r\n\r\n\r\nexport function getFrameDuration(timestamp, lastUpdate, fps) {\r\n  if (timestamp - lastUpdate > 1000 / fps) {\r\n    lastUpdate = timestamp;\r\n    return lastUpdate;\r\n  }\r\n\r\n  return null;\r\n}\r\n","import { randomColor } from \"../utils/function.js\";\r\n\r\nexport default class Particles {\r\n    constructor(x, y, ctx) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.color = randomColor();\r\n        this.size = 0.1 + Math.random() * 3;\r\n        this.ctx = ctx;\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.beginPath();\r\n        this.ctx.fillStyle = this.color;\r\n        this.ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2)\r\n        this.ctx.fill();\r\n    }\r\n\r\n    update() {\r\n        this.draw()\r\n    }\r\n}\r\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nexport function Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    delete packet.attachments; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder === true) {\n        const isIndexValid = typeof data.num === \"number\" &&\n            data.num >= 0 &&\n            data.num < buffers.length;\n        if (isIndexValid) {\n            return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n        }\n        else {\n            throw new Error(\"illegal attachments\");\n        }\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (Object.prototype.hasOwnProperty.call(data, key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * These strings must not be used as event names, as they have a special meaning.\n */\nconst RESERVED_EVENTS = [\n    \"connect\",\n    \"connect_error\",\n    \"disconnect\",\n    \"disconnecting\",\n    \"newListener\",\n    \"removeListener\", // used by the Node.js EventEmitter\n];\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encoder constructor\n     *\n     * @param {function} replacer - custom replacer to pass down to JSON.parse\n     */\n    constructor(replacer) {\n        this.replacer = replacer;\n    }\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                return this.encodeAsBinary({\n                    type: obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK,\n                    nsp: obj.nsp,\n                    data: obj.data,\n                    id: obj.id,\n                });\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data, this.replacer);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n// see https://stackoverflow.com/questions/8511281/check-if-a-value-is-an-object-in-javascript\nfunction isObject(value) {\n    return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    /**\n     * Decoder constructor\n     *\n     * @param {function} reviver - custom reviver to pass down to JSON.stringify\n     */\n    constructor(reviver) {\n        super();\n        this.reviver = reviver;\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            if (this.reconstructor) {\n                throw new Error(\"got plaintext data when reconstructing a packet\");\n            }\n            packet = this.decodeString(obj);\n            const isBinaryEvent = packet.type === PacketType.BINARY_EVENT;\n            if (isBinaryEvent || packet.type === PacketType.BINARY_ACK) {\n                packet.type = isBinaryEvent ? PacketType.EVENT : PacketType.ACK;\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = this.tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    tryParse(str) {\n        try {\n            return JSON.parse(str, this.reviver);\n        }\n        catch (e) {\n            return false;\n        }\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return isObject(payload);\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || isObject(payload);\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return (Array.isArray(payload) &&\n                    (typeof payload[0] === \"number\" ||\n                        (typeof payload[0] === \"string\" &&\n                            RESERVED_EVENTS.indexOf(payload[0]) === -1)));\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n            this.reconstructor = null;\n        }\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\n/**\n * A Socket is the fundamental class for interacting with the server.\n *\n * A Socket belongs to a certain Namespace (by default /) and uses an underlying {@link Manager} to communicate.\n *\n * @example\n * const socket = io();\n *\n * socket.on(\"connect\", () => {\n *   console.log(\"connected\");\n * });\n *\n * // send an event to the server\n * socket.emit(\"foo\", \"bar\");\n *\n * socket.on(\"foobar\", () => {\n *   // an event was received from the server\n * });\n *\n * // upon disconnection\n * socket.on(\"disconnect\", (reason) => {\n *   console.log(`disconnected due to ${reason}`);\n * });\n */\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     */\n    constructor(io, nsp, opts) {\n        super();\n        /**\n         * Whether the socket is currently connected to the server.\n         *\n         * @example\n         * const socket = io();\n         *\n         * socket.on(\"connect\", () => {\n         *   console.log(socket.connected); // true\n         * });\n         *\n         * socket.on(\"disconnect\", () => {\n         *   console.log(socket.connected); // false\n         * });\n         */\n        this.connected = false;\n        /**\n         * Whether the connection state was recovered after a temporary disconnection. In that case, any missed packets will\n         * be transmitted by the server.\n         */\n        this.recovered = false;\n        /**\n         * Buffer for packets received before the CONNECT packet\n         */\n        this.receiveBuffer = [];\n        /**\n         * Buffer for packets that will be sent once the socket is connected\n         */\n        this.sendBuffer = [];\n        /**\n         * The queue of packets to be sent with retry in case of failure.\n         *\n         * Packets are sent one by one, each waiting for the server acknowledgement, in order to guarantee the delivery order.\n         * @private\n         */\n        this._queue = [];\n        /**\n         * A sequence to generate the ID of the {@link QueuedPacket}.\n         * @private\n         */\n        this._queueSeq = 0;\n        this.ids = 0;\n        /**\n         * A map containing acknowledgement handlers.\n         *\n         * The `withError` attribute is used to differentiate handlers that accept an error as first argument:\n         *\n         * - `socket.emit(\"test\", (err, value) => { ... })` with `ackTimeout` option\n         * - `socket.timeout(5000).emit(\"test\", (err, value) => { ... })`\n         * - `const value = await socket.emitWithAck(\"test\")`\n         *\n         * From those that don't:\n         *\n         * - `socket.emit(\"test\", (value) => { ... });`\n         *\n         * In the first case, the handlers will be called with an error when:\n         *\n         * - the timeout is reached\n         * - the socket gets disconnected\n         *\n         * In the second case, the handlers will be simply discarded upon disconnection, since the client will never receive\n         * an acknowledgement from the server.\n         *\n         * @private\n         */\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        this._opts = Object.assign({}, opts);\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Whether the socket is currently disconnected\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"connect\", () => {\n     *   console.log(socket.disconnected); // false\n     * });\n     *\n     * socket.on(\"disconnect\", () => {\n     *   console.log(socket.disconnected); // true\n     * });\n     */\n    get disconnected() {\n        return !this.connected;\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects.\n     *\n     * @example\n     * const socket = io();\n     *\n     * console.log(socket.active); // true\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   if (reason === \"io server disconnect\") {\n     *     // the disconnection was initiated by the server, you need to manually reconnect\n     *     console.log(socket.active); // false\n     *   }\n     *   // else the socket will automatically try to reconnect\n     *   console.log(socket.active); // true\n     * });\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @example\n     * const socket = io({\n     *   autoConnect: false\n     * });\n     *\n     * socket.connect();\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for {@link connect()}.\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * This method mimics the WebSocket.send() method.\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket/send\n     *\n     * @example\n     * socket.send(\"hello\");\n     *\n     * // this is equivalent to\n     * socket.emit(\"message\", \"hello\");\n     *\n     * @return self\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @example\n     * socket.emit(\"hello\", \"world\");\n     *\n     * // all serializable datastructures are supported (no need to call JSON.stringify)\n     * socket.emit(\"hello\", 1, \"2\", { 3: [\"4\"], 5: Uint8Array.from([6]) });\n     *\n     * // with an acknowledgement from the server\n     * socket.emit(\"hello\", \"world\", (val) => {\n     *   // ...\n     * });\n     *\n     * @return self\n     */\n    emit(ev, ...args) {\n        var _a, _b, _c;\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev.toString() + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        if (this._opts.retries && !this.flags.fromQueue && !this.flags.volatile) {\n            this._addToQueue(args);\n            return this;\n        }\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            const id = this.ids++;\n            const ack = args.pop();\n            this._registerAckCallback(id, ack);\n            packet.id = id;\n        }\n        const isTransportWritable = (_b = (_a = this.io.engine) === null || _a === void 0 ? void 0 : _a.transport) === null || _b === void 0 ? void 0 : _b.writable;\n        const isConnected = this.connected && !((_c = this.io.engine) === null || _c === void 0 ? void 0 : _c._hasPingExpired());\n        const discardPacket = this.flags.volatile && !isTransportWritable;\n        if (discardPacket) {\n        }\n        else if (isConnected) {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * @private\n     */\n    _registerAckCallback(id, ack) {\n        var _a;\n        const timeout = (_a = this.flags.timeout) !== null && _a !== void 0 ? _a : this._opts.ackTimeout;\n        if (timeout === undefined) {\n            this.acks[id] = ack;\n            return;\n        }\n        // @ts-ignore\n        const timer = this.io.setTimeoutFn(() => {\n            delete this.acks[id];\n            for (let i = 0; i < this.sendBuffer.length; i++) {\n                if (this.sendBuffer[i].id === id) {\n                    this.sendBuffer.splice(i, 1);\n                }\n            }\n            ack.call(this, new Error(\"operation has timed out\"));\n        }, timeout);\n        const fn = (...args) => {\n            // @ts-ignore\n            this.io.clearTimeoutFn(timer);\n            ack.apply(this, args);\n        };\n        fn.withError = true;\n        this.acks[id] = fn;\n    }\n    /**\n     * Emits an event and waits for an acknowledgement\n     *\n     * @example\n     * // without timeout\n     * const response = await socket.emitWithAck(\"hello\", \"world\");\n     *\n     * // with a specific timeout\n     * try {\n     *   const response = await socket.timeout(1000).emitWithAck(\"hello\", \"world\");\n     * } catch (err) {\n     *   // the server did not acknowledge the event in the given delay\n     * }\n     *\n     * @return a Promise that will be fulfilled when the server acknowledges the event\n     */\n    emitWithAck(ev, ...args) {\n        return new Promise((resolve, reject) => {\n            const fn = (arg1, arg2) => {\n                return arg1 ? reject(arg1) : resolve(arg2);\n            };\n            fn.withError = true;\n            args.push(fn);\n            this.emit(ev, ...args);\n        });\n    }\n    /**\n     * Add the packet to the queue.\n     * @param args\n     * @private\n     */\n    _addToQueue(args) {\n        let ack;\n        if (typeof args[args.length - 1] === \"function\") {\n            ack = args.pop();\n        }\n        const packet = {\n            id: this._queueSeq++,\n            tryCount: 0,\n            pending: false,\n            args,\n            flags: Object.assign({ fromQueue: true }, this.flags),\n        };\n        args.push((err, ...responseArgs) => {\n            if (packet !== this._queue[0]) {\n                // the packet has already been acknowledged\n                return;\n            }\n            const hasError = err !== null;\n            if (hasError) {\n                if (packet.tryCount > this._opts.retries) {\n                    this._queue.shift();\n                    if (ack) {\n                        ack(err);\n                    }\n                }\n            }\n            else {\n                this._queue.shift();\n                if (ack) {\n                    ack(null, ...responseArgs);\n                }\n            }\n            packet.pending = false;\n            return this._drainQueue();\n        });\n        this._queue.push(packet);\n        this._drainQueue();\n    }\n    /**\n     * Send the first packet of the queue, and wait for an acknowledgement from the server.\n     * @param force - whether to resend a packet that has not been acknowledged yet\n     *\n     * @private\n     */\n    _drainQueue(force = false) {\n        if (!this.connected || this._queue.length === 0) {\n            return;\n        }\n        const packet = this._queue[0];\n        if (packet.pending && !force) {\n            return;\n        }\n        packet.pending = true;\n        packet.tryCount++;\n        this.flags = packet.flags;\n        this.emit.apply(this, packet.args);\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this._sendConnectPacket(data);\n            });\n        }\n        else {\n            this._sendConnectPacket(this.auth);\n        }\n    }\n    /**\n     * Sends a CONNECT packet to initiate the Socket.IO session.\n     *\n     * @param data\n     * @private\n     */\n    _sendConnectPacket(data) {\n        this.packet({\n            type: PacketType.CONNECT,\n            data: this._pid\n                ? Object.assign({ pid: this._pid, offset: this._lastOffset }, data)\n                : data,\n        });\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @param description\n     * @private\n     */\n    onclose(reason, description) {\n        this.connected = false;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason, description);\n        this._clearAcks();\n    }\n    /**\n     * Clears the acknowledgement handlers upon disconnection, since the client will never receive an acknowledgement from\n     * the server.\n     *\n     * @private\n     */\n    _clearAcks() {\n        Object.keys(this.acks).forEach((id) => {\n            const isBuffered = this.sendBuffer.some((packet) => String(packet.id) === id);\n            if (!isBuffered) {\n                // note: handlers that do not accept an error as first argument are ignored here\n                const ack = this.acks[id];\n                delete this.acks[id];\n                if (ack.withError) {\n                    ack.call(this, new Error(\"socket has been disconnected\"));\n                }\n            }\n        });\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    this.onconnect(packet.data.sid, packet.data.pid);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                this.destroy();\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n        if (this._pid && args.length && typeof args[args.length - 1] === \"string\") {\n            this._lastOffset = args[args.length - 1];\n        }\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowledgement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (typeof ack !== \"function\") {\n            return;\n        }\n        delete this.acks[packet.id];\n        // @ts-ignore FIXME ack is incorrectly inferred as 'never'\n        if (ack.withError) {\n            packet.data.unshift(null);\n        }\n        // @ts-ignore\n        ack.apply(this, packet.data);\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id, pid) {\n        this.id = id;\n        this.recovered = pid && this._pid === pid;\n        this._pid = pid; // defined only if connection state recovery is enabled\n        this.connected = true;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n        this._drainQueue(true);\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => {\n            this.notifyOutgoingListeners(packet);\n            this.packet(packet);\n        });\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually. In that case, the socket will not try to reconnect.\n     *\n     * If this is the last active Socket instance of the {@link Manager}, the low-level connection will be closed.\n     *\n     * @example\n     * const socket = io();\n     *\n     * socket.on(\"disconnect\", (reason) => {\n     *   // console.log(reason); prints \"io client disconnect\"\n     * });\n     *\n     * socket.disconnect();\n     *\n     * @return self\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for {@link disconnect()}.\n     *\n     * @return self\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @example\n     * socket.compress(false).emit(\"hello\");\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @example\n     * socket.volatile.emit(\"hello\"); // the server may or may not receive it\n     *\n     * @returns self\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the callback will be called with an error when the\n     * given number of milliseconds have elapsed without an acknowledgement from the server:\n     *\n     * @example\n     * socket.timeout(5000).emit(\"my-event\", (err) => {\n     *   if (err) {\n     *     // the server did not acknowledge the event in the given delay\n     *   }\n     * });\n     *\n     * @returns self\n     */\n    timeout(timeout) {\n        this.flags.timeout = timeout;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @example\n     * socket.onAny((event, ...args) => {\n     *   console.log(`got ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @example\n     * socket.prependAny((event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`got event ${event}`);\n     * }\n     *\n     * socket.onAny(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAny(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAny();\n     *\n     * @param listener\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.onAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    onAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * Note: acknowledgements sent to the server are not included.\n     *\n     * @example\n     * socket.prependAnyOutgoing((event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * });\n     *\n     * @param listener\n     */\n    prependAnyOutgoing(listener) {\n        this._anyOutgoingListeners = this._anyOutgoingListeners || [];\n        this._anyOutgoingListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @example\n     * const catchAllListener = (event, ...args) => {\n     *   console.log(`sent event ${event}`);\n     * }\n     *\n     * socket.onAnyOutgoing(catchAllListener);\n     *\n     * // remove a specific listener\n     * socket.offAnyOutgoing(catchAllListener);\n     *\n     * // or remove all listeners\n     * socket.offAnyOutgoing();\n     *\n     * @param [listener] - the catch-all listener (optional)\n     */\n    offAnyOutgoing(listener) {\n        if (!this._anyOutgoingListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyOutgoingListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyOutgoingListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     */\n    listenersAnyOutgoing() {\n        return this._anyOutgoingListeners || [];\n    }\n    /**\n     * Notify the listeners for each packet sent\n     *\n     * @param packet\n     *\n     * @private\n     */\n    notifyOutgoingListeners(packet) {\n        if (this._anyOutgoingListeners && this._anyOutgoingListeners.length) {\n            const listeners = this._anyOutgoingListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, packet.data);\n            }\n        }\n    }\n}\n","/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\nexport function Backoff(opts) {\n    opts = opts || {};\n    this.ms = opts.min || 100;\n    this.max = opts.max || 10000;\n    this.factor = opts.factor || 2;\n    this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n    this.attempts = 0;\n}\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\nBackoff.prototype.duration = function () {\n    var ms = this.ms * Math.pow(this.factor, this.attempts++);\n    if (this.jitter) {\n        var rand = Math.random();\n        var deviation = Math.floor(rand * this.jitter * ms);\n        ms = (Math.floor(rand * 10) & 1) == 0 ? ms - deviation : ms + deviation;\n    }\n    return Math.min(ms, this.max) | 0;\n};\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\nBackoff.prototype.reset = function () {\n    this.attempts = 0;\n};\n/**\n * Set the minimum duration\n *\n * @api public\n */\nBackoff.prototype.setMin = function (min) {\n    this.ms = min;\n};\n/**\n * Set the maximum duration\n *\n * @api public\n */\nBackoff.prototype.setMax = function (max) {\n    this.max = max;\n};\n/**\n * Set the jitter\n *\n * @api public\n */\nBackoff.prototype.setJitter = function (jitter) {\n    this.jitter = jitter;\n};\n","import { Socket as Engine, installTimerFunctions, nextTick, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Backoff } from \"./contrib/backo2.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        if (!v) {\n            this.skipReconnect = true;\n        }\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        const onError = (err) => {\n            this.cleanup();\n            this._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                this.maybeReconnectOnOpen();\n            }\n        };\n        // emit `error`\n        const errorSub = on(socket, \"error\", onError);\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                onError(new Error(\"timeout\"));\n                socket.close();\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), \n        // @ts-ignore\n        on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        try {\n            this.decoder.add(data);\n        }\n        catch (e) {\n            this.onclose(\"parse error\", e);\n        }\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        // the nextTick call prevents an exception in a user-provided event listener from triggering a disconnection due to a \"parse error\"\n        nextTick(() => {\n            this.emitReserved(\"packet\", packet);\n        }, this.setTimeoutFn);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        else if (this._autoConnect && !socket.active) {\n            socket.connect();\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        this.onclose(\"forced close\");\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called when:\n     *\n     * - the low-level engine is closed\n     * - the parser encountered a badly formatted packet\n     * - all sockets are disconnected\n     *\n     * @private\n     */\n    onclose(reason, description) {\n        var _a;\n        this.cleanup();\n        (_a = this.engine) === null || _a === void 0 ? void 0 : _a.close();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason, description);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(() => {\n                this.clearTimeoutFn(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\nexport { Fetch, NodeXHR, XHR, NodeWebSocket, WebSocket, WebTransport, } from \"engine.io-client\";\n","import { parse } from \"engine.io-client\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parse(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n","import { drawSpriteFrame, getFrameDuration } from \"./function.js\";\r\n\r\nexport default class SpriteAnimation {\r\n    constructor(spritesheet, x, y, cutWidth, cutHeight, scaleWidth, scaleHeight, numberOfRows, numberOfColumns, fps, maxInterations = 0) {\r\n        this.spritesheet = spritesheet;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.cutWidth = cutWidth;\r\n        this.cutHeight = cutHeight;\r\n        this.scaleWidth = cutWidth * scaleWidth;\r\n        this.scaleHeight = cutHeight * scaleHeight;\r\n        this.totalFrames = numberOfRows * numberOfColumns;\r\n        this.numberOfColumns = numberOfColumns;\r\n        this.maxInterations = maxInterations;\r\n        this.fps = fps;\r\n        this.CanvasX = 0;\r\n        this.CanvasY = 0;\r\n        this.currentFrame = 0;\r\n        this.lastUpdate = 0;\r\n        this.numberOfInterations = 0;\r\n        this.state = 'running';\r\n    }\r\n\r\n    animate(t) {\r\n        if (this.state === 'running') {\r\n            const duration = getFrameDuration(t, this.lastUpdate, this.fps);\r\n\r\n            if (duration) {\r\n                if (this.maxInterations !== 0 && (this.currentFrame + 1) >= this.totalFrames)\r\n                    this.numberOfInterations++;\r\n                this.currentFrame = (this.currentFrame + 1) % this.totalFrames;\r\n                this.lastUpdate = duration;\r\n            }\r\n\r\n\r\n            if (this.numberOfInterations >= this.maxInterations)\r\n                this.state = 'paused';\r\n        }\r\n\r\n\r\n        const column = this.currentFrame % this.numberOfColumns;\r\n        const row = Math.floor(this.currentFrame / this.numberOfColumns)\r\n\r\n        drawSpriteFrame(this.spritesheet, column, row, this.x, this.y, this.cutWidth, this.cutHeight, this.scaleWidth, this.scaleHeight)\r\n    }\r\n\r\n    slide(x, y) {\r\n        this.update(x, y)\r\n        const duration = getFrameDuration(t, this.lastUpdate, this.fps);\r\n\r\n        if (duration) {\r\n            this.currentFrame = (this.currentFrame + 1) % this.totalFrames;\r\n            this.lastUpdate = duration;\r\n        }\r\n\r\n        const column = this.currentFrame % this.numberOfColumns;\r\n        const row = Math.floor(this.currentFrame / this.numberOfColumns)\r\n\r\n        drawSpriteFrame(this.spritesheet, column, row, this.x, this.y, this.cutWidth, this.cutHeight, this.scaleWidth, this.scaleHeight)\r\n    }\r\n\r\n    update(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}","const imgs = ['./imgs/player.svg', './imgs/playerburst.svg', './imgs/explosion.png']\r\n\r\nconst imgData = [];\r\n\r\nimgs.forEach((img) => {\r\n  let image = new Image();\r\n  image.src = img;\r\n\r\n  imgData.push(image);\r\n})\r\n\r\n\r\nexport default imgData;\r\n\r\n","import SpriteAnimation from \"../utils/spriteAnimation.js\";\r\nimport { drawSpriteFrame, getFrameDuration, getRandomInt, } from \"../utils/function.js\";\r\nimport imgData from \"./playerImg.js\";\r\n\r\nexport const playerSpawnLocation = () => [getRandomInt(-100, 100), getRandomInt(-100, 100)];\r\n// export const player = new User(userName, getRandomInt(-maxDistance + 100, maxDistance - 100), getRandomInt(-maxDistance + 100, maxDistance - 100), ctx);\r\n\r\n\r\nexport default class Player {\r\n    constructor(username, x, y, ctx) {\r\n        this.username = username;\r\n        this.x = x; // change to internal\r\n        this.y = y;\r\n        this.w = 35;\r\n        this.h = 50;\r\n        this.live = 2;\r\n        this.dead = false;\r\n        this.weaponHit = false;\r\n        this.damage = false;\r\n        this.ctx = ctx;\r\n        this.player = imgData[0];\r\n        this.nitro = imgData[1];\r\n        this.nitroPower = 0;\r\n        this.angle = (Math.PI / 180) * getRandomInt(0, 360);\r\n        this.speed = 0;\r\n        this.maxSpeed = 5;\r\n        this.gunSpeed = 5;\r\n        this.friction = 0.1;\r\n        this.weaponId = 'gun';\r\n        this.weapons = []\r\n        this.lastUpdate = 0;\r\n        this.explosion = null;\r\n    }\r\n\r\n    draw(t) {\r\n        this.ctx.save();\r\n\r\n        this.ctx.translate(this.x, this.y);\r\n\r\n        this.ctx.rotate(-this.angle);\r\n\r\n        // this.ctx.fillStyle = 'white';\r\n        // this.ctx.fillRect(0, 0, this.w, this.h);\r\n        if (this.damage) {\r\n            this.ctx.globalAlpha = 0.5;\r\n        }\r\n\r\n\r\n        if (!this.dead) {\r\n            this.ctx.drawImage(this.player, -this.w / 2, -this.h / 2, this.w, this.h);\r\n            this.ctx.globalAlpha = this.nitroPower;\r\n            this.ctx.drawImage(this.nitro, -this.w / 4, this.h / 2, this.w / 2, this.h / 2);\r\n        }\r\n\r\n        if (this.explosion) {\r\n            this.explosion.animate(t);\r\n            console.log(this.explosion.state, this.explosion.numberOfInterations);\r\n        }\r\n\r\n        this.ctx.restore();\r\n\r\n        this.weapons.forEach((weapon) => {\r\n            weapon.draw()\r\n        })\r\n    }\r\n\r\n    respawn() {\r\n        this.explosion = null;\r\n        const loc = playerSpawnLocation();\r\n        this.angle = (Math.PI / 180) * getRandomInt(0, 360);\r\n        this.x = loc[0];\r\n        this.y = loc[1];\r\n\r\n        setTimeout(() => {\r\n            this.dead = false;\r\n            this.weaponHit = false;\r\n        }, 5000)\r\n    }\r\n\r\n    getVertices() {\r\n        const rad = Math.hypot(this.w, this.h) / 2;\r\n        const alpha = Math.atan2(this.w, this.h);\r\n\r\n        const vertices = [\r\n            {\r\n                x: this.x - Math.sin(this.angle - alpha) * rad,\r\n                y: this.y - Math.cos(this.angle - alpha) * rad\r\n            }, // Top-left\r\n            {\r\n                x: this.x - Math.sin(this.angle + alpha) * rad,\r\n                y: this.y - Math.cos(this.angle + alpha) * rad\r\n            },  // Top-right\r\n            {\r\n                x: this.x - Math.sin(Math.PI + this.angle - alpha) * rad,\r\n                y: this.y - Math.cos(Math.PI + this.angle - alpha) * rad\r\n            },   // Bottom-left\r\n            {\r\n                x: this.x - Math.sin(Math.PI + this.angle + alpha) * rad,\r\n                y: this.y - Math.cos(Math.PI + this.angle + alpha) * rad\r\n            },  // Bottom-right\r\n        ];\r\n\r\n        return vertices;\r\n    }\r\n\r\n    #drawVertices() {\r\n        const vertices = this.getVertices();\r\n\r\n        this.ctx.save();\r\n        this.ctx.fillStyle = 'blue';\r\n        this.ctx.lineWidth = 2;\r\n        this.ctx.globalAlpha = 0.5;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(vertices[0].x, vertices[0].y);\r\n\r\n        vertices.forEach((vertex, i) => {\r\n            if (i) {\r\n                this.ctx.lineTo(vertex.x, vertex.y);\r\n            }\r\n        });\r\n\r\n        this.ctx.lineTo(vertices[0].x, vertices[0].y);\r\n        this.ctx.fill();\r\n\r\n        this.ctx.restore();\r\n    }\r\n\r\n    updateState() {\r\n        if (!this.live) {\r\n            this.explosion = new SpriteAnimation(imgData[2], -this.w * 1.5, -this.h * 3.2, 50, 100, 2, 2, 1, 6, 30, 1);\r\n            this.live = 2;\r\n        }\r\n\r\n        if (this.explosion && this.explosion.state === 'paused') {\r\n            this.respawn()\r\n        }\r\n    }\r\n}","import { lerp } from \"../utils/function.js\";\r\nimport Player from \"./player.js\";\r\n\r\nexport default class CPlayer extends Player {\r\n    constructor(username, x, y, ctx) {\r\n        super(username, x, y, ctx);\r\n        this.px = x;\r\n        this.py = y;\r\n        this.pangle = (Math.PI / 180) * 270;\r\n        this._addEventListener = () => {};\r\n    }\r\n\r\n    update(x, y, angle, nitroPower) {\r\n        this.updateState()\r\n        this.nitroPower = nitroPower;\r\n\r\n        const sec = new Date().getTime() / 1000;\r\n        const t = sec - Math.floor(sec);\r\n\r\n        this.x = lerp(this.px, x, t);\r\n        this.y = lerp(this.py, y, t);\r\n        this.px = x;\r\n        this.py = y;\r\n        this.angle = lerp(this.pangle, angle, t);\r\n        this.pangle = angle;\r\n\r\n        \r\n\r\n        this.weapons.forEach((weapon, i) => {\r\n            const update = weapon.update()\r\n\r\n            if (update) {\r\n                this.weapons.splice(i, 1)\r\n            }\r\n        })\r\n    }\r\n}","import { player } from \"../currentPlayer.js\";\r\n\r\nexport default class Weapon {\r\n    constructor(id, x, y, w, h, angle, speed, ctx, color) {\r\n        this.id = id;\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n        this.speed = speed;\r\n        this.angle = angle;\r\n        this.color = color;\r\n        this.ctx = ctx;\r\n    }\r\n\r\n    \r\n    getVertices() {\r\n        const rad = Math.hypot(this.w, this.h) / 2;\r\n        const alpha = Math.atan2(this.w, this.h);\r\n    \r\n        const vertices = [\r\n            {\r\n                x: this.x - Math.sin(this.angle - alpha) * rad,\r\n                y: this.y - Math.cos(this.angle - alpha) * rad\r\n            }, // Top-left\r\n            {\r\n                x: this.x - Math.sin(this.angle + alpha) * rad,\r\n                y: this.y - Math.cos(this.angle + alpha) * rad\r\n            },  // Top-right\r\n            {\r\n                x: this.x - Math.sin(Math.PI + this.angle - alpha) * rad,\r\n                y: this.y - Math.cos(Math.PI + this.angle - alpha) * rad\r\n            },   // Bottom-left\r\n            {\r\n                x: this.x - Math.sin(Math.PI + this.angle + alpha) * rad,\r\n                y: this.y - Math.cos(Math.PI + this.angle + alpha) * rad\r\n            },  // Bottom-right\r\n        ];\r\n    \r\n        return vertices;\r\n    }\r\n}","import Weapon from \"./weapon.js\";\r\nimport { distanceBetween } from \"../../utils/function.js\";\r\nimport { player } from \"../currentPlayer.js\";\r\n\r\nexport default class Gun extends Weapon {\r\n    constructor(id, x, y, angle, speed, ctx, color = 'pink') {\r\n        super(id, x, y, 2, 10, angle, speed, ctx, color);\r\n        this.initX = x;\r\n        this.initY = y;\r\n    }\r\n\r\n    draw() {\r\n        this.ctx.save();\r\n        \r\n        this.ctx.translate(this.x, this.y);\r\n\r\n        this.ctx.rotate(-this.angle);\r\n\r\n        this.ctx.strokeStyle = this.color;\r\n        this.ctx.lineWidth = this.w;\r\n        this.ctx.beginPath();\r\n        this.ctx.moveTo(0, -this.h*4);\r\n        this.ctx.lineTo(0, -this.h*2.5);\r\n        // this.ctx.arc(0, -this.h*4, 5, 0, Math.PI * 2);\r\n        this.ctx.stroke();\r\n\r\n        this.ctx.restore();\r\n    }\r\n\r\n    update() {\r\n        this.x -= this.speed * Math.sin(this.angle);\r\n        this.y -= this.speed * Math.cos(this.angle);\r\n        \r\n        if(distanceBetween(this, { x: this.initX, y: this.initY })[0] > 2000) {\r\n            return true;\r\n        }\r\n    }\r\n}\r\n","import Gun from \"./Gun.js\";\r\n\r\nexport const weapons = {\r\n    'gun': Gun\r\n}","import { io } from \"socket.io-client\";\r\nimport { ctx, userName } from \"./utils/constant.js\";\r\nimport CPlayer from \"./player/connectedPlayers.js\";\r\nimport { player } from \"./player/currentPlayer.js\";\r\nimport { weapons } from \"./player/weapons/utils.js\";\r\nimport { cp } from \"./main.js\";\r\nimport { damageAnimation } from \"./utils/function.js\";\r\n\r\nconst socket = io(\"/\", {\r\n    withCredentials: true,\r\n    query: {\r\n        username: userName\r\n    },\r\n})\r\n\r\n\r\nsocket.on('userDisconnected', (username) => {\r\n    console.log('connection disconnected', cp)\r\n    cp = cp.filter((cplayer) => cplayer.username !== username)\r\n})\r\n\r\nsocket.on('userConnected', (cplayer, id) => {\r\n    cp.push(new CPlayer(cplayer.username, cplayer.x, cplayer.y, ctx));\r\n    console.log('connection established', cplayer.username)\r\n    socket.emit('returnConnection', player, id)\r\n})\r\n\r\nsocket.on('receivedConnection', (cplayer) => {\r\n    cp.push(new CPlayer(cplayer.username, cplayer.x, cplayer.y, ctx));\r\n})\r\n\r\n\r\nsocket.on('playerMotion', (cplayer) => {\r\n    cp.map((p) => {\r\n        if (p.username === cplayer.username) {\r\n            p.update(cplayer.x, cplayer.y, cplayer.angle, cplayer.nitroPower)\r\n        }\r\n    })\r\n})\r\n\r\nsocket.on('shootWeapon', (username, weaponId, weapon) => {\r\n    cp.map((p) => {\r\n        if (p.username === username) {\r\n            p.weapons.push(new weapons[weaponId](username, weapon.x, weapon.y, weapon.angle, weapon.speed, p.ctx, 'brick'))\r\n        }\r\n    })\r\n})\r\n\r\nsocket.on('weaponHit', (shooter, shootee, gunIndex) => {\r\n    if (player.username === shootee) {\r\n        navigator.vibrate([200, 500])\r\n        damageAnimation(player)\r\n    }\r\n\r\n    cp.map((p) => {\r\n        if (p.username === shooter) {\r\n            p.weapons.splice(gunIndex, 1)\r\n        }\r\n\r\n        if (p.username === shootee) {\r\n            damageAnimation(player)\r\n        }\r\n    })\r\n})\r\n\r\nsocket.on('destroy', (shooter, shootee) => {\r\n    if (player.username === shootee) {\r\n        player.dead = true;\r\n        player.weaponHit = true;\r\n    }\r\n\r\n    cp.map((p) => {\r\n        if (p.username === shootee) {\r\n            p.dead = true;\r\n            p.weaponHit = true;\r\n        }\r\n    })\r\n})\r\n\r\nexport default socket;","import { ctx, maxDistance, userName } from \"../utils/constant.js\";\r\nimport { cp } from \"../main.js\";\r\nimport { checkCollision, damageAnimation } from \"../utils/function.js\";\r\nimport socket from \"../websocket.js\";\r\nimport Player, { playerSpawnLocation } from \"./player.js\";\r\nimport { weapons } from \"./weapons/utils.js\";\r\n\r\n\r\nexport default class User extends Player {\r\n    constructor(username, x, y, ctx) {\r\n        super(username, x, y, ctx);\r\n        this.#addEventListener();\r\n    }\r\n\r\n    #addEventListener() {\r\n        addEventListener('devicemotion', (e) => {\r\n            if (!this.dead) {\r\n                let { x = 0, y = 0 } = e.accelerationIncludingGravity || {};\r\n\r\n                x = Math.round(x) - 10;\r\n                y = Math.round(y);\r\n\r\n                this.speed -= x * 1.1;\r\n\r\n                this.nitroPower = this.speed / this.maxSpeed;\r\n\r\n                if (this.speed != 0) {\r\n                    const flip = this.speed > 0 ? 5 : -5;\r\n                    this.angle -= (0.003 * y) * flip;\r\n                }\r\n            }\r\n        });\r\n\r\n        addEventListener('click', () => {\r\n            if (!this.dead) {\r\n                const wObj = new weapons[this.weaponId](this.username, this.x, this.y, this.angle, this.speed + this.gunSpeed, this.ctx)\r\n                socket.emit('onShoot', this.username, this.weaponId, wObj);\r\n                this.weapons.push(wObj)\r\n            }\r\n        })\r\n    }\r\n\r\n    update() {\r\n        this.updateState()\r\n\r\n        if (this.speed > 0) {\r\n            this.speed -= this.friction;\r\n        }\r\n\r\n        if (this.speed < 0) {\r\n            this.speed += this.friction;\r\n        }\r\n\r\n        if (Math.abs(this.speed) < this.friction) {\r\n            this.speed = 0;\r\n        }\r\n\r\n\r\n        this.speed = Math.min(this.speed, this.maxSpeed);\r\n        this.speed = Math.max(this.speed, -this.maxSpeed);\r\n\r\n        this.x -= this.speed * Math.sin(this.angle);\r\n        this.y -= this.speed * Math.cos(this.angle);\r\n\r\n        this.x = Math.min(this.x, maxDistance);\r\n        this.x = Math.max(this.x, -maxDistance);\r\n        this.y = Math.min(this.y, maxDistance);\r\n        this.y = Math.max(this.y, -maxDistance);\r\n\r\n        // if (this.weapons.length < 100) {\r\n        // const wObj = new weapons[this.weaponId](this.username, this.x, this.y, this.angle, this.speed + this.gunSpeed, this.ctx)\r\n        // socket.emit('onShoot', this.username, this.weaponId, wObj);\r\n        // this.weapons.push(wObj)\r\n        // }\r\n\r\n        this.weapons.forEach((weapon, i) => {\r\n            const update = weapon.update()\r\n\r\n\r\n            cp.forEach((cplayer) => {\r\n                if (checkCollision(cplayer, weapon)) {\r\n                    if (cplayer.live && !cplayer.weaponHit) {\r\n                        damageAnimation(cplayer);\r\n                        socket.emit('weaponHit', this.username, cplayer.username, i)\r\n                        this.weapons.splice(i, 1)\r\n                    }\r\n                    \r\n                    if (cplayer.live === 0 && !cplayer.dead) {\r\n                        cplayer.dead = true;\r\n                        cplayer.weaponHit = true;\r\n                        socket.emit('destroy', this.username, cplayer.username);\r\n                    }\r\n                }\r\n            })\r\n\r\n            if (update) {\r\n                this.weapons.splice(i, 1)\r\n            }\r\n        })\r\n\r\n        socket.emit('onmotion', this)\r\n    }\r\n}\r\n\r\n\r\nexport const player = new User(userName, ...playerSpawnLocation(), ctx);","import Particles from \"./particles/particles.js\";\r\nimport { player } from \"./player/currentPlayer.js\";\r\nimport { distanceBetween, drawLive, getRandomInt } from \"./utils/function.js\";\r\nimport { ctx, canvas } from \"./utils/constant.js\"\r\nimport socket from \"./websocket.js\";\r\n// window.addEventListener('click', () => {\r\n//     const audioCtx = new AudioContext();\r\n// })\r\n\r\nconst scaleFactor = 0.5;\r\n\r\nexport let cp = []\r\n\r\nconst bg = new Image();\r\nbg.src = './imgs/star.png'\r\n\r\nctx.drawImage(bg, 0, 0, 100, 100)\r\n\r\nsocket.emit(\"connected\", player);\r\n\r\nconst elem = document.documentElement;\r\n\r\nctx.imageSmoothingEnabled = true;\r\nctx.imageSmoothingQuality = 'high';\r\n\r\nconst particles = [];\r\n\r\n\r\nfor (let i = 0; i < 100; i++) {\r\n    const x = getRandomInt(-1000, 1000);\r\n    const y = getRandomInt(-1000, 1000);\r\n    particles.push(new Particles(x, y, ctx))\r\n}\r\n\r\nfunction renderParticles() {\r\n    particles.forEach((particle) => {\r\n        const dB = distanceBetween(particle, player);\r\n        particle.update();\r\n        if (dB[0] > canvas.width + 1000) {\r\n            let x = getRandomInt(player.x - dB[0], player.x + dB[0]);\r\n            let y = getRandomInt(player.y - dB[0], player.y + dB[0]);\r\n\r\n            particle.x = dB[1] > 0 ? Math.min(x, -x) + canvas.width : Math.max(x, -x) - canvas.width;\r\n            particle.y = dB[2] > 0 ? Math.min(y, -y) + canvas.height : Math.max(y, -y) - canvas.height;\r\n        }\r\n    });\r\n}\r\n\r\nfunction main(t) {\r\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\r\n\r\n\r\n    ctx.strokeStyle = 'red';\r\n\r\n    ctx.save();\r\n    ctx.translate(canvas.width / 2, canvas.height / 2);\r\n    ctx.scale(scaleFactor, scaleFactor);\r\n    ctx.translate(-canvas.width / 2, -canvas.height / 2);\r\n    ctx.translate(-player.x + canvas.width / 2, -player.y + canvas.height / 2);\r\n    renderParticles();\r\n\r\n\r\n    player.draw(t);\r\n    player.update();\r\n\r\n    cp.forEach((player) => {\r\n        player.draw(t);\r\n    })\r\n\r\n\r\n    ctx.restore();\r\n \r\n    drawLive(player)\r\n\r\n    requestAnimationFrame(main);\r\n}\r\n\r\nrequestAnimationFrame(main);\r\n\r\ncanvas.width = innerWidth;\r\ncanvas.height = innerHeight;\r\n\r\n// event listeners\r\naddEventListener('resize', () => {\r\n    canvas.width = innerWidth;\r\n    canvas.height = innerHeight;\r\n})\r\n\r\n\r\nfunction goFullscreen() {\r\n    if (elem.requestFullscreen) {\r\n        elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n        elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n        elem.webkitRequestFullscreen();\r\n    } else if (elem.msRequestFullscreen) {\r\n        elem.msRequestFullscreen();\r\n    }\r\n}\r\n\r\nfunction exitFullscreen() {\r\n    if (document.exitFullscreen) {\r\n        document.exitFullscreen();\r\n    } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen();\r\n    } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen();\r\n    } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen();\r\n    }\r\n}\r\n\r\ndocument.onclick = () => {\r\n    if (document.fullscreenElement || document.mozFullscreenElement || document.webkitFullscreenElement || document.msFullscreenElement) {\r\n        console.log('Exit Fullscreen')\r\n        // exitFullscreen();\r\n    } else {\r\n        console.log('Go Fullscreen')\r\n        // goFullscreen();\r\n    }\r\n}"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","canvas","document","createElement","body","appendChild","ctx","getContext","userName","char","i","String","fromCharCode","getRandomInt","getRandomCharacters","min","max","minCeiled","Math","ceil","maxFloored","floor","random","distanceBetween","obj2","sqrt","pow","x","y","lerp","a","b","t","projectPolygon","axis","vertices","projections","map","v","apply","_toConsumableArray","isSeparatingAxis","vertices1","vertices2","proj1","proj2","getEdges","edges","length","next","push","damageAnimation","player","live","weaponHit","interVal","setInterval","damage","setTimeout","clearInterval","drawSpriteFrame","spriteSheet","frameX","frameY","canvasX","canvasY","width","height","scaleWidth","scaleHeight","drawImage","getFrameDuration","timestamp","lastUpdate","fps","Particles","_createClass","_classCallCheck","this","color","concat","size","beginPath","fillStyle","arc","PI","fill","draw","PACKET_TYPES","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","lookup","chars","charCodeAt","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decode","SEPARATOR","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","shift","j","slice","Emitter","mixin","on","addEventListener","event","fn","_callbacks","once","off","arguments","removeListener","removeAllListeners","removeEventListener","cb","callbacks","splice","emit","args","Array","emitReserved","listeners","hasListeners","nextTick","Promise","resolve","then","setTimeoutFn","globalThisShim","self","window","Function","pick","attr","k","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","randomString","Date","now","TransportError","Error","constructor","reason","description","context","super","Transport","writable","query","socket","forceBase64","onError","open","readyState","doOpen","close","doClose","onClose","send","packets","write","onOpen","onData","packet","onPacket","details","pause","onPause","createUri","schema","_hostname","_port","path","_query","hostname","indexOf","port","secure","Number","encodedQuery","str","encodeURIComponent","_polling","name","_poll","total","doPoll","encodedPayload","encodedPackets","decodedPacket","decodePayload","count","join","encodePayload","doWrite","uri","timestampRequests","timestampParam","sid","b64","XMLHttpRequest","err","hasCORS","empty","BaseXHR","location","isSSL","protocol","xd","req","request","method","xhrStatus","pollXhr","Request","createRequest","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","unloadHandler","attachEvent","hasXHR2","newRequest","responseType","isReactNative","navigator","product","toLowerCase","BaseWS","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","transports","websocket","_packet","webtransport","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","TransformStream","transform","controller","header","headerArray","DataView","getUint16","view","n","getUint32","enqueue","createPacketDecoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","arrayBuffer","encoded","TextEncoder","encode","encodePacketToBinary","payloadLength","setUint8","setUint16","setBigUint64","BigInt","pipeTo","_writer","getWriter","read","done","polling","assign","re","parts","parse","src","replace","m","exec","source","host","authority","ipv6uri","pathNames","names","queryKey","$0","$1","$2","withEventListeners","OFFLINE_EVENT_LISTENERS","listener","SocketWithoutUpgrade","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","qs","qry","pairs","l","pair","decodeURIComponent","_beforeunloadEventListener","transport","_offlineEventListener","_onClose","_cookieJar","createCookieJar","_open","createTransport","EIO","id","priorWebsocketSuccess","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","payloadSize","c","utf8Length","_hasPingExpired","hasExpired","msg","options","compress","cleanupAndClose","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","_filterUpgrades","upgrades","filteredUpgrades","Socket","filter","withNativeFile","File","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","num","newData","reconstructPacket","_reconstructPacket","RESERVED_EVENTS","PacketType","Encoder","replacer","EVENT","ACK","encodeAsString","encodeAsBinary","BINARY_EVENT","BINARY_ACK","nsp","stringify","deconstruction","unshift","isObject","Decoder","reviver","add","reconstructor","decodeString","isBinaryEvent","BinaryReconstructor","takeBinaryData","start","buf","payload","tryParse","substr","isPayloadValid","CONNECT","DISCONNECT","CONNECT_ERROR","destroy","finishedReconstruction","reconPack","binData","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","recovered","receiveBuffer","sendBuffer","_queue","_queueSeq","ids","acks","flags","auth","_autoConnect","disconnected","subEvents","subs","onpacket","active","_readyState","_b","_c","retries","fromQueue","volatile","_addToQueue","ack","pop","_registerAckCallback","isTransportWritable","engine","isConnected","notifyOutgoingListeners","ackTimeout","timer","withError","emitWithAck","reject","arg1","arg2","tryCount","pending","responseArgs","_drainQueue","force","_sendConnectPacket","_pid","pid","offset","_lastOffset","_clearAcks","some","onconnect","onevent","onack","ondisconnect","message","emitEvent","_anyListeners","sent","emitBuffered","subDestroy","onAny","prependAny","offAny","listenersAny","onAnyOutgoing","_anyOutgoingListeners","prependAnyOutgoing","offAnyOutgoing","listenersAnyOutgoing","Backoff","ms","factor","jitter","attempts","duration","rand","deviation","reset","setMin","setMax","setJitter","Manager","nsps","reconnection","reconnectionAttempts","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","_reconnection","skipReconnect","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","maybeReconnectOnOpen","_reconnecting","reconnect","openSubDestroy","errorSub","onping","ondata","ondecoded","_destroy","_close","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex","SpriteAnimation","spritesheet","cutWidth","cutHeight","numberOfRows","numberOfColumns","maxInterations","totalFrames","CanvasX","CanvasY","currentFrame","numberOfInterations","column","row","update","imgData","img","image","Image","playerSpawnLocation","_Player_brand","WeakSet","Player","username","w","h","dead","nitro","nitroPower","angle","speed","maxSpeed","gunSpeed","friction","weaponId","weapons","explosion","save","translate","rotate","globalAlpha","animate","console","log","restore","weapon","_this","rad","hypot","alpha","atan2","sin","cos","respawn","CPlayer","_Player","_callSuper","px","py","pangle","_addEventListener","_inherits","_this2","updateState","sec","getTime","Weapon","Gun","_Weapon","initX","initY","strokeStyle","lineWidth","moveTo","lineTo","stroke","cp","cplayer","shooter","shootee","gunIndex","vibrate","_User_brand","User","_assertClassBrand","abs","obj1","_step","getVertices","_iterator","_createForOfIteratorHelper","s","edge","f","checkCollision","_this3","_ref","accelerationIncludingGravity","_ref$x","_ref$y","round","flip","wObj","_construct","bg","documentElement","imageSmoothingEnabled","imageSmoothingQuality","particles","requestAnimationFrame","main","clearRect","scale","particle","dB","fillStroke","innerWidth","drawLive","innerHeight","onclick","fullscreenElement","mozFullscreenElement","webkitFullscreenElement","msFullscreenElement"],"sourceRoot":""}